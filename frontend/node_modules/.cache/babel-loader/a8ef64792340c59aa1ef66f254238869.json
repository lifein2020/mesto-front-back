{"ast":null,"code":"var _jsxFileName = \"/Users/svetlana/it/react-mesto-api-full/react-mesto-auth/src/components/EditAvatarPopup/EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from 'react';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAvatarPopup({\n  isOpen,\n  onClose,\n  onUpdateAvatar\n}) {\n  _s();\n\n  const urlInput = useRef(); //устанавливаем в поле ввода ссылку по умолчанию при открытии попапа\n\n  useEffect(() => {\n    const currentUrlInput = urlInput.current;\n    currentUrlInput.value = '';\n  }, [isOpen]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateAvatar({\n      avatarUrl: urlInput.current.value\n      /* значение инпута, полученное с помощью рефа*/\n\n    }); // очищаем инпут после успешного добавления информации\n\n    urlInput.current.value = '';\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"avatar\",\n    id: \"formAvatar\",\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    button: \"save\",\n    titleButton: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"url\",\n      className: \"popup__input popup__input_avatar_link\",\n      id: \"avatar-link-input\",\n      name: \"avatar_link\",\n      autoComplete: \"on\",\n      required: true,\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\" //value=\"https://somewebsite.com/someimage.jpg\"\n      ,\n      ref: urlInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__error avatar-link-input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditAvatarPopup, \"IO0U6sIxIo53BgDGMfHXOTu3glU=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["/Users/svetlana/it/react-mesto-api-full/react-mesto-auth/src/components/EditAvatarPopup/EditAvatarPopup.js"],"names":["useRef","useEffect","PopupWithForm","EditAvatarPopup","isOpen","onClose","onUpdateAvatar","urlInput","currentUrlInput","current","value","handleSubmit","e","preventDefault","avatarUrl"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;;AAEA,SAASC,eAAT,CAAyB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA;AAAnB,CAAzB,EAA8D;AAAA;;AAE1D,QAAMC,QAAQ,GAAGP,MAAM,EAAvB,CAF0D,CAI1D;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,eAAe,GAAGD,QAAQ,CAACE,OAAjC;AACAD,IAAAA,eAAe,CAACE,KAAhB,GAAwB,EAAxB;AACH,GAHQ,EAGN,CAACN,MAAD,CAHM,CAAT;;AAKA,WAASO,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AAEAP,IAAAA,cAAc,CAAC;AACbQ,MAAAA,SAAS,EAAEP,QAAQ,CAACE,OAAT,CAAiBC;AAAM;;AADrB,KAAD,CAAd,CAHqB,CAMrB;;AACAH,IAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB,GAAyB,EAAzB;AACD;;AAEH,sBACI,QAAC,aAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,EAAE,EAAC,YAFP;AAGI,IAAA,KAAK,EAAC,uFAHV;AAII,IAAA,MAAM,EAAC,MAJX;AAKI,IAAA,WAAW,EAAC,wDALhB;AAMI,IAAA,MAAM,EAAEN,MANZ;AAOI,IAAA,OAAO,EAAEC,OAPb;AAQI,IAAA,QAAQ,EAAEM,YARd;AAAA,4BAUI;AACA,MAAA,IAAI,EAAC,KADL;AAEA,MAAA,SAAS,EAAC,uCAFV;AAGA,MAAA,EAAE,EAAC,mBAHH;AAIA,MAAA,IAAI,EAAC,aAJL;AAKA,MAAA,YAAY,EAAC,IALb;AAMA,MAAA,QAAQ,MANR;AAOA,MAAA,WAAW,EAAC,wFAPZ,CAQA;AARA;AASA,MAAA,GAAG,EAAEJ;AATL;AAAA;AAAA;AAAA;AAAA,YAVJ,eAqBI;AACA,MAAA,SAAS,EAAC;AADV;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;;GAhDQJ,e;;KAAAA,e;AAkDT,eAAeA,eAAf","sourcesContent":["import { useRef, useEffect } from 'react';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n\n    const urlInput = useRef();\n\n    //устанавливаем в поле ввода ссылку по умолчанию при открытии попапа\n    useEffect(() => {\n        const currentUrlInput = urlInput.current;\n        currentUrlInput.value = '';\n    }, [isOpen]) \n\n    function handleSubmit(e) {\n        e.preventDefault();\n    \n        onUpdateAvatar({\n          avatarUrl: urlInput.current.value /* значение инпута, полученное с помощью рефа*/\n        });\n        // очищаем инпут после успешного добавления информации\n        urlInput.current.value = '';\n      } \n\n    return (\n        <PopupWithForm\n            name=\"avatar\"\n            id=\"formAvatar\"\n            title=\"Обновить аватар\"\n            button=\"save\"\n            titleButton=\"Сохранить\"\n            isOpen={isOpen}\n            onClose={onClose}\n            onSubmit={handleSubmit}\n        >\n            <input\n            type=\"url\"\n            className=\"popup__input popup__input_avatar_link\"\n            id=\"avatar-link-input\"\n            name=\"avatar_link\"\n            autoComplete=\"on\"\n            required\n            placeholder=\"Ссылка на аватар\"\n            //value=\"https://somewebsite.com/someimage.jpg\"\n            ref={urlInput}\n            />\n            <span\n            className=\"popup__error avatar-link-input-error\"\n            >\n            </span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditAvatarPopup;\n\n"]},"metadata":{},"sourceType":"module"}