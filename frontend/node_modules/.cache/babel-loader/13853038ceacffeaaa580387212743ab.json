{"ast":null,"code":"var _jsxFileName = \"/Users/svetlana/it/react-mesto-api-full/frontend/src/components/InfoTooltip/InfoTooltip.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InfoTooltip({\n  isOpen,\n  onClose,\n  message\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isOpen ? `popup popup_type_infoTooltip popup_is-opened` : `popup popup_type_infoTooltip`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container popup__container_infoTooltip\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"popup__close popup__close_infoTooltip\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"popup__container_image\",\n        src: message.image,\n        alt: message.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"popup__title_sign\",\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 9\n  }, this);\n}\n\n_c = InfoTooltip;\nexport default InfoTooltip;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"sources":["/Users/svetlana/it/react-mesto-api-full/frontend/src/components/InfoTooltip/InfoTooltip.js"],"names":["InfoTooltip","isOpen","onClose","message","image","text"],"mappings":";;;AAAA,SAASA,WAAT,CAAqB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA;AAAnB,CAArB,EAAmD;AAC/C,sBACI;AAAK,IAAA,SAAS,EAAEF,MAAM,GAAI,8CAAJ,GAAqD,8BAA3E;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,+CAAf;AAAA,8BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,uCAAhC;AAAwE,QAAA,OAAO,EAAEC;AAAjF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAwC,QAAA,GAAG,EAAEC,OAAO,CAACC,KAArD;AAA4D,QAAA,GAAG,EAAED,OAAO,CAACC;AAAzE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA,kBAAmCD,OAAO,CAACE;AAA3C;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;KAVQL,W;AAYT,eAAeA,WAAf","sourcesContent":["function InfoTooltip({ isOpen, onClose, message }) {\n    return (\n        <div className={isOpen ? `popup popup_type_infoTooltip popup_is-opened` : `popup popup_type_infoTooltip`}>\n            <div className=\"popup__container popup__container_infoTooltip\">\n                <button type=\"button\" className=\"popup__close popup__close_infoTooltip\" onClick={onClose}></button>\n                <img className=\"popup__container_image\" src={message.image} alt={message.image}/>\n                <h2 className=\"popup__title_sign\">{message.text}</h2>\n            </div>\n        </div>\n    )\n} \n\nexport default InfoTooltip;\n"]},"metadata":{},"sourceType":"module"}