{"ast":null,"code":"var _jsxFileName = \"/Users/svetlana/it/react-mesto-api-full/frontend/src/components/App/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport api from '../../utils/Api';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport kusto from '../../images/kusto.jpg';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\nimport EditProfilePopup from '../EditProfilePopup/EditProfilePopup';\nimport EditAvatarPopup from '../EditAvatarPopup/EditAvatarPopup';\nimport AddPlacePopup from '../AddPlacePopup/AddPlacePopup';\nimport ImagePopup from '../ImagePopup/ImagePopup';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Footer from '../Footer/Footer';\nimport Register from '../Register/Register';\nimport Login from '../Login/Login';\nimport InfoTooltip from '../InfoTooltip/InfoTooltip';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport * as auth from '../../utils/auth.js';\nimport success from \"../../images/success.svg\";\nimport fail from \"../../images/fail.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Для компонента Main:\n  const [isEditProfileOpen, setIsEditProfileOpen] = useState(false);\n\n  const handleEditProfileClick = () => {\n    setIsEditProfileOpen(true);\n  };\n\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const [isEditAvatarOpen, setIsEditAvatarOpen] = useState(false);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarOpen(true);\n  };\n\n  const [selectedCard, setIsSelectedCard] = useState({});\n  const [isPreviewPopupOpened, setIsPreviewPopupOpened] = useState(false);\n\n  function onCardClick(card) {\n    setIsSelectedCard(card);\n    setIsPreviewPopupOpened(true);\n  }\n\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [message, setMessage] = useState({\n    image: \"\",\n    text: \"\"\n  }); //Для компонентов папапов\n\n  const handleAllPopupsClose = () => {\n    setIsEditProfileOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarOpen(false);\n    setIsSelectedCard({});\n    setIsPreviewPopupOpened(false);\n    setIsInfoTooltipOpen(false);\n  }; //Для компонента Main, чтобы потом перебросить в Card через props:\n  //1.\n\n\n  const [currentUser, setCurrentUser] = useState({\n    name: 'Жак-Ив Кусто',\n    about: 'Исследователь океана',\n    avatar: kusto\n  });\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getCardsList()]) //получаем данные с сервера\n    .then(([userData, cardsArray]) => {\n      // передаем эти данные для отрисовки на странице, см в консоли формат в котором приходят. Если правильно передали, то в Main передадуться чнрез props\n      setCurrentUser({\n        name: userData.data.name,\n        about: userData.data.about,\n        avatar: userData.data.avatar,\n        _id: userData.data._id\n      });\n      setCards(cardsArray.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); //3.\n\n  const handleCardLike = card => {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    console.log(isLiked);\n    console.log(card); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }; //4.\n\n\n  const handleCardDelete = card => {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.log(err);\n    });\n  }; //Для компонента EditProfilePopup\n\n\n  const handleUpdateUser = ({\n    userName,\n    userDescription\n  }) => {\n    // отправляем значения инпутов(то, что ввели)\n    api.patchUserInfo({\n      userName,\n      userDescription\n    }).then(dataProfile => {\n      setCurrentUser({\n        name: dataProfile.data.name,\n        about: dataProfile.data.about,\n        avatar: dataProfile.data.avatar,\n        // чтобы аватар тоже отображался \n        _id: dataProfile.data._id //чтобы лайки проставлялись после обновления профиля\n\n      }); //handleAllPopupsClose();\n    }).then(() => {\n      handleAllPopupsClose();\n    }).catch(err => {\n      console.log(err);\n    });\n  }; //Для компонента EditAvatarPopup\n\n\n  const handleUpdateAvatar = ({\n    avatarUrl\n  }) => {\n    //отправляем то, что ввели в инпут\n    api.patchAvatarUser({\n      avatarUrl\n    }).then(dataProfile => {\n      setCurrentUser({\n        avatar: dataProfile.data.avatar,\n        //чтобы данные профиля тоже отображались \n        name: dataProfile.data.name,\n        about: dataProfile.data.about,\n        _id: dataProfile.data._id\n      });\n      handleAllPopupsClose();\n    }).catch(err => {\n      console.log(err);\n    });\n  }; //Для компонента AddPlacePopup\n\n\n  function handleAddPlaceSubmit({\n    card_name,\n    card_image_link\n  }) {\n    api.postAddCard({\n      card_name,\n      card_image_link\n    }).then(newCard => {\n      setCards([newCard.data, ...cards]);\n      handleAllPopupsClose();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  useEffect(() => {\n    const closeByEscape = e => {\n      if (e.key === 'Escape') {\n        handleAllPopupsClose();\n      }\n    };\n\n    document.addEventListener('keydown', closeByEscape);\n    return () => document.removeEventListener('keydown', closeByEscape);\n  }, []);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState('email');\n  const history = useHistory();\n\n  const authUser = jwt => {\n    // console.log(jwt);\n    return auth.getContent(jwt).then(res => {\n      // console.log(res);\n      if (res) {\n        setLoggedIn(true);\n        setUserEmail(res.data.email);\n      }\n    }).catch(err => console.log(err));\n  }; // если у пользователя есть токен в localStorage, проверит валидность токена\n\n\n  useEffect(() => {\n    const jwt = localStorage.getItem('jwt'); // console.log(jwt);\n\n    if (jwt) {\n      authUser(jwt);\n    }\n  }, [loggedIn]); //если пользователь авторизован, проходит в систему\n\n  useEffect(() => {\n    if (loggedIn) {\n      history.push('/');\n    }\n  }, [loggedIn, history]);\n\n  const handleRegister = ({\n    password,\n    email\n  }) => {\n    return auth.register(password, email).then(dataReg => {\n      // console.log(dataReg);\n      if (dataReg.data._id || dataReg.statusCode !== 400) {\n        setUserEmail(dataReg.data.email);\n        history.push('/sign-in');\n        setIsInfoTooltipOpen(true);\n        setMessage({\n          image: success,\n          text: 'Вы успешно зарегистрировались!'\n        });\n      } else {\n        return;\n      }\n    }).catch(err => {\n      setIsInfoTooltipOpen(true);\n      setMessage({\n        image: fail,\n        text: 'Что-то пошло не так! Попробуйте ещё раз.'\n      });\n    });\n  };\n\n  const handleLogin = ({\n    password,\n    email\n  }) => {\n    return auth.authorize(password, email).then(dataLog => {\n      if (dataLog.token || dataLog.statusCode === 200) {\n        setLoggedIn(true); //чтобы ProtectedRoute отображал маршрут /\n\n        localStorage.setItem('jwt', dataLog.token);\n        history.push('/'); //очищаем стейт и перенаправляем пользователя на страницу /\n\n        setUserEmail(email);\n      } else {\n        return;\n      }\n    }).catch(err => {\n      setIsInfoTooltipOpen(true);\n      setMessage({\n        image: fail,\n        text: 'Что-то пошло не так! Попробуйте ещё раз.'\n      });\n    });\n  };\n\n  const onSignOut = () => {\n    localStorage.removeItem('jwt');\n    setLoggedIn(false);\n    history.push('/login');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n        value: currentUser,\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          onSignOut: onSignOut,\n          email: userEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            exact: true,\n            path: \"/\",\n            loggedIn: loggedIn,\n            component: Main,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onEditAvatar: handleEditAvatarClick,\n            cards: cards,\n            onCardClick: onCardClick,\n            onLikeClick: handleCardLike,\n            onDeleteClick: handleCardDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            children: /*#__PURE__*/_jsxDEV(Register, {\n              onRegister: handleRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/sign-in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/sign-up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfileOpen,\n          onClose: handleAllPopupsClose //currentUser={currentUser}\n          ,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: handleAllPopupsClose,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          name: \"confirm\",\n          id: \"formConfirm\",\n          title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n          button: \"button_confirm popup__save\",\n          titleButton: \"\\u0414\\u0430\",\n          onClose: handleAllPopupsClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarOpen,\n          onClose: handleAllPopupsClose,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: handleAllPopupsClose,\n          active: isPreviewPopupOpened\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n          isOpen: isInfoTooltipOpen,\n          onClose: handleAllPopupsClose,\n          message: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"tvVor/BnV7DCagHU/ql4U2J2k4w=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/svetlana/it/react-mesto-api-full/frontend/src/components/App/App.js"],"names":["useState","useEffect","Route","Switch","Redirect","useHistory","api","CurrentUserContext","kusto","PopupWithForm","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ImagePopup","Header","Main","Footer","Register","Login","InfoTooltip","ProtectedRoute","auth","App","isEditProfileOpen","setIsEditProfileOpen","handleEditProfileClick","isAddPlacePopupOpen","setIsAddPlacePopupOpen","handleAddPlaceClick","isEditAvatarOpen","setIsEditAvatarOpen","handleEditAvatarClick","selectedCard","setIsSelectedCard","isPreviewPopupOpened","setIsPreviewPopupOpened","onCardClick","card","isInfoTooltipOpen","setIsInfoTooltipOpen","message","setMessage","image","text","handleAllPopupsClose","currentUser","setCurrentUser","name","about","avatar","cards","setCards","Promise","all","getUserInfo","getCardsList","then","userData","cardsArray","data","_id","catch","err","console","log","handleCardLike","isLiked","likes","some","i","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleUpdateUser","userName","userDescription","patchUserInfo","dataProfile","handleUpdateAvatar","avatarUrl","patchAvatarUser","handleAddPlaceSubmit","card_name","card_image_link","postAddCard","closeByEscape","e","key","document","addEventListener","removeEventListener","loggedIn","setLoggedIn","userEmail","setUserEmail","history","authUser","jwt","getContent","res","email","localStorage","getItem","push","handleRegister","password","register","dataReg","statusCode","success","fail","handleLogin","authorize","dataLog","token","setItem","onSignOut","removeItem"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n  Route,\n  Switch,\n  Redirect,\n  useHistory\n} from 'react-router-dom';\nimport api from '../../utils/Api';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport kusto from '../../images/kusto.jpg';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\nimport EditProfilePopup from '../EditProfilePopup/EditProfilePopup';\nimport EditAvatarPopup from '../EditAvatarPopup/EditAvatarPopup';\nimport AddPlacePopup from '../AddPlacePopup/AddPlacePopup';\nimport ImagePopup from '../ImagePopup/ImagePopup';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Footer from '../Footer/Footer';\nimport Register from '../Register/Register';\nimport Login from '../Login/Login';\nimport InfoTooltip from '../InfoTooltip/InfoTooltip';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport * as auth from '../../utils/auth.js';\nimport success from '../../images/success.svg';\nimport fail from '../../images/fail.svg';\n\n\nfunction App() {\n\n  //Для компонента Main:\n  const [isEditProfileOpen, setIsEditProfileOpen] = useState(false);\n  const handleEditProfileClick = () => {\n    setIsEditProfileOpen(true);\n  }\n\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  const [isEditAvatarOpen, setIsEditAvatarOpen] = useState(false);\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarOpen(true);\n  }\n\n  const [selectedCard, setIsSelectedCard] = useState({});\n  const [isPreviewPopupOpened, setIsPreviewPopupOpened] = useState(false);\n  function onCardClick(card) {\n    setIsSelectedCard(card);\n    setIsPreviewPopupOpened(true);\n  }\n\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [message, setMessage] = useState({image: \"\", text: \"\"});\n\n  //Для компонентов папапов\n  const handleAllPopupsClose = () => {\n    setIsEditProfileOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarOpen(false);\n    setIsSelectedCard({});\n    setIsPreviewPopupOpened(false);\n    setIsInfoTooltipOpen(false);\n  }\n\n  //Для компонента Main, чтобы потом перебросить в Card через props:\n  //1.\n  const [currentUser, setCurrentUser] = useState({name: 'Жак-Ив Кусто', about: 'Исследователь океана', avatar: kusto});\n  const [cards, setCards] = useState([]);\n  \n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getCardsList()]) //получаем данные с сервера\n    .then(([userData, cardsArray]) => { // передаем эти данные для отрисовки на странице, см в консоли формат в котором приходят. Если правильно передали, то в Main передадуться чнрез props\n      setCurrentUser({\n        name: userData.data.name, \n        about: userData.data.about, \n        avatar: userData.data.avatar,\n        _id: userData.data._id,\n      });\n      setCards(cardsArray.data);\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  }, []);\n\n  //3.\n  const handleCardLike = (card) => {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    console.log(isLiked);\n    console.log(card);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, isLiked)\n    .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  }\n\n  //4.\n  const handleCardDelete = (card) => {\n    api.deleteCard(card._id)\n    .then(() => {\n        setCards((state) =>  state.filter((c) => c._id !== card._id));\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  }\n\n  //Для компонента EditProfilePopup\n  const handleUpdateUser = ({userName, userDescription}) => {\n    // отправляем значения инпутов(то, что ввели)\n    api.patchUserInfo({userName, userDescription}) \n    .then((dataProfile) => {\n      setCurrentUser({\n        name: dataProfile.data.name, \n        about: dataProfile.data.about,\n        avatar: dataProfile.data.avatar, // чтобы аватар тоже отображался \n        _id: dataProfile.data._id, //чтобы лайки проставлялись после обновления профиля\n      });\n      //handleAllPopupsClose();\n    })\n    .then(() => {\n      handleAllPopupsClose();\n    })\n    .catch((err) => {\n      console.log(err);\n    }) \n  }\n\n  //Для компонента EditAvatarPopup\n  const handleUpdateAvatar = ({ avatarUrl }) => {\n    //отправляем то, что ввели в инпут\n    api.patchAvatarUser({ avatarUrl })\n    .then((dataProfile) => {\n      setCurrentUser({\n        avatar: dataProfile.data.avatar,\n        //чтобы данные профиля тоже отображались \n        name: dataProfile.data.name, \n        about: dataProfile.data.about,\n        _id: dataProfile.data._id,\n      });\n      handleAllPopupsClose();\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  }\n\n  //Для компонента AddPlacePopup\n  function handleAddPlaceSubmit({ card_name, card_image_link }) {\n    api.postAddCard({ card_name, card_image_link })\n    .then(newCard => {\n      setCards([newCard.data, ...cards]);\n      handleAllPopupsClose();\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  }\n\n  useEffect(() => {\n    const closeByEscape = (e) => {\n      if (e.key === 'Escape') {\n        handleAllPopupsClose();\n      }\n  }\n    document.addEventListener('keydown', closeByEscape)\n    return () => document.removeEventListener('keydown', closeByEscape)\n  }, [])\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState('email');\n  const history = useHistory();\n  \n\n  const authUser = (jwt) => {\n    // console.log(jwt);\n    return auth.getContent(jwt)\n    .then((res) => {\n      // console.log(res);\n      if (res) {\n        setLoggedIn(true);\n        setUserEmail(res.data.email);\n      }\n    })\n    .catch(err => console.log(err));\n  };\n\n  // если у пользователя есть токен в localStorage, проверит валидность токена\n  useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n    // console.log(jwt);\n    if (jwt) {\n      authUser(jwt);\n    }\n  }, [loggedIn]);\n\n  //если пользователь авторизован, проходит в систему\n  useEffect(() => {\n    if (loggedIn) {\n      history.push('/');\n    }\n  }, [loggedIn, history]);\n\n  const handleRegister = ({ password, email }) => {\n    return auth.register(password, email)\n    .then(dataReg => {\n      // console.log(dataReg);\n      if (dataReg.data._id || dataReg.statusCode !== 400) {\n        setUserEmail(dataReg.data.email);\n        history.push('/sign-in');\n        setIsInfoTooltipOpen(true);\n        setMessage({ image: success, text: 'Вы успешно зарегистрировались!' });\n      } else {\n        return\n      }\n    })\n    .catch( err => {\n      setIsInfoTooltipOpen(true);\n      setMessage({ image: fail, text: 'Что-то пошло не так! Попробуйте ещё раз.' });\n      }\n    )\n  };\n\n  const handleLogin = ({ password, email }) => {\n    return auth.authorize(password, email)\n    .then(dataLog => {\n      if (dataLog.token || dataLog.statusCode === 200) {\n        setLoggedIn(true); //чтобы ProtectedRoute отображал маршрут /\n        localStorage.setItem('jwt', dataLog.token);\n        history.push('/'); //очищаем стейт и перенаправляем пользователя на страницу /\n        setUserEmail(email);\n      } else {\n          return\n      }\n    })\n    .catch( err => {\n      setIsInfoTooltipOpen(true);\n      setMessage({ image: fail, text: 'Что-то пошло не так! Попробуйте ещё раз.' });\n      }\n    )\n  };\n\n  const onSignOut = () => {\n    localStorage.removeItem('jwt');\n    setLoggedIn(false);\n    history.push('/login');\n  }\n\n  return (\n    <>\n      <div className=\"page\">\n        <CurrentUserContext.Provider value={currentUser}>\n          <Header \n              onSignOut={onSignOut}\n              email={userEmail}\n          />\n          <Switch>\n            <ProtectedRoute \n              exact \n              path=\"/\" \n              loggedIn={loggedIn} \n              component={Main} \n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onEditAvatar={handleEditAvatarClick}\n              cards={cards}\n              onCardClick={onCardClick}\n              onLikeClick={handleCardLike}\n              onDeleteClick={handleCardDelete}\n            />\n            <Route path=\"/sign-up\">\n              <Register onRegister={handleRegister} />\n            </Route>\n            <Route path=\"/sign-in\">\n              <Login onLogin={handleLogin} />\n            </Route>\n            <Route>\n            {loggedIn ? <Redirect to=\"/sign-in\" /> : <Redirect to=\"/sign-up\" />}\n            </Route>\n          </Switch>\n\n          <Footer />\n          \n          <EditProfilePopup\n          isOpen={isEditProfileOpen}\n          onClose={handleAllPopupsClose}\n          //currentUser={currentUser}\n          onUpdateUser={handleUpdateUser}\n          >\n          </EditProfilePopup>\n\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={handleAllPopupsClose}\n            onAddPlace={handleAddPlaceSubmit}\n          >\n          </AddPlacePopup>\n\n          <PopupWithForm\n            name=\"confirm\"\n            id=\"formConfirm\"\n            title=\"Вы уверены?\"\n            button=\"button_confirm popup__save\"\n            titleButton=\"Да\"\n            onClose={handleAllPopupsClose}\n          />\n\n          <EditAvatarPopup\n            isOpen={isEditAvatarOpen}\n            onClose={handleAllPopupsClose}\n            onUpdateAvatar={handleUpdateAvatar}\n          >\n          </EditAvatarPopup>\n\n          <ImagePopup card={selectedCard}\n            onClose={handleAllPopupsClose}\n            active={isPreviewPopupOpened}\n          />\n\n          <InfoTooltip \n            isOpen={isInfoTooltipOpen}\n            onClose={handleAllPopupsClose}\n            message={message}\n          />\n        </CurrentUserContext.Provider>\n      </div>\n    </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}