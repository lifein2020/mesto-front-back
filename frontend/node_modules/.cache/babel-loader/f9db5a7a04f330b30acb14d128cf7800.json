{"ast":null,"code":"class Api {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n  } // Обработка ответа с сервера\n\n\n  _getResponse(response) {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(`Ошибка: ${response.status}`);\n  } // Получение данных пользователя(моих)\n\n\n  getUserInfo() {\n    return fetch(this.baseUrl + 'users/me', {\n      // headers: this.headers\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\n      }\n    }).then(this._getResponse);\n  } // Получение данных всех карточек\n\n\n  getCardsList() {\n    return fetch(this.baseUrl + 'cards', {\n      // либо `${this.baseUrl}cards` и в результате конкатенации получается https://mesto.nomoreparties.co/v1/cohort-26/cards\n      // headers: this.headers\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\n      }\n    }).then(this._getResponse);\n  } // Добавление карточек\n\n\n  postAddCard({\n    card_name,\n    card_image_link\n  }) {\n    return fetch(`${this.baseUrl}cards`, {\n      method: 'POST',\n      body: JSON.stringify({\n        name: card_name,\n        link: card_image_link\n      }),\n      headers: this.headers\n    }).then(this._getResponse);\n  } // Редактирование профиля\n\n\n  patchUserInfo({\n    userName,\n    userDescription\n  }) {\n    return fetch(this.baseUrl + 'users/me', {\n      //`${this.baseUrl}users/me`\n      method: 'PATCH',\n      body: JSON.stringify({\n        name: userName,\n        about: userDescription\n      }),\n      // headers: this.headers\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\n      }\n    }).then(this._getResponse);\n  } // Смена аватара\n\n\n  patchAvatarUser({\n    avatarUrl\n  }) {\n    return fetch(this.baseUrl + 'users/me/avatar', {\n      //`${this.baseUrl}users/me/avatar`\n      method: 'PATCH',\n      body: JSON.stringify({\n        avatar: avatarUrl\n      }),\n      // headers: this.headers\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\n      }\n    }).then(this._getResponse);\n  } // Удаление карточки\n\n\n  deleteCard(id) {\n    return fetch(`${this.baseUrl}cards/${id}`, {\n      method: 'DELETE',\n      // headers: this.headers\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\n      }\n    }).then(this._getResponse);\n  } // Поставить лайк\n\n  /*putLikeCard(id) {\n    return fetch(`${this.baseUrl}cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this.headers\n    })\n    .then(this._getResponse);\n  }\n   // Удалить лайк:\n  //--------- 2 вариант рабочий----------\n  deliteLikeCard(id) {\n    return fetch(`${this.baseUrl}cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this.headers\n    })\n    .then(this._getResponse);\n  }*/\n  //-------- 1 вариант рабочий---------\n\n\n  changeLikeCardStatus(id, like) {\n    return fetch(`${this.baseUrl}cards/${id}/likes`, {\n      method: like ? 'DELETE' : 'PUT',\n      //если карточка уже лайкнута(черный лайк), то удалить лайк, иначе поставить\n      // headers: this.headers\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`\n      }\n    }).then(this._getResponse);\n  }\n\n}\n\nconst api = new Api({\n  // baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-26/',\n  baseUrl: 'http://localhost:3005/',\n  headers: {\n    // authorization: 'd11963a5-3631-4d4e-b873-aed64d959e3c',\n    //authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWJkMjZjYmMwMjdiOTZkODNiNGRhYTYiLCJpYXQiOjE2Mzk3ODcwNzIsImV4cCI6MTY0MDM5MTg3Mn0.7OxUJnliCmyvNERrzT6ZUFuKOB-jVOYHXneoBliIUhI`, \n    authorization: null,\n    //'Authorization': `Bearer` + JSON.parse(localStorage.getItem('token')),\n    // 'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/svetlana/it/react-mesto-api-full/frontend/src/utils/Api.js"],"names":["Api","constructor","baseUrl","headers","_getResponse","response","ok","json","Promise","reject","status","getUserInfo","fetch","localStorage","getItem","then","getCardsList","postAddCard","card_name","card_image_link","method","body","JSON","stringify","name","link","patchUserInfo","userName","userDescription","about","patchAvatarUser","avatarUrl","avatar","deleteCard","id","changeLikeCardStatus","like","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor ({ baseUrl, headers }) {\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n  }\n\n  // Обработка ответа с сервера\n  _getResponse(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(`Ошибка: ${response.status}`);\n  }\n\n  // Получение данных пользователя(моих)\n  getUserInfo() {\n    return fetch(this.baseUrl + 'users/me', {\n      // headers: this.headers\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n      }\n    }).then(this._getResponse);\n  }\n\n  // Получение данных всех карточек\n  getCardsList() {\n    return fetch(this.baseUrl + 'cards', { // либо `${this.baseUrl}cards` и в результате конкатенации получается https://mesto.nomoreparties.co/v1/cohort-26/cards\n      // headers: this.headers\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n      }\n    }).then(this._getResponse);\n  }\n\n  // Добавление карточек\n  postAddCard({ card_name, card_image_link }) {\n    return fetch(`${this.baseUrl}cards`, {\n      method: 'POST',\n      body: JSON.stringify({\n        name: card_name,\n        link: card_image_link\n      }),\n      headers: this.headers\n    }).then(this._getResponse);\n  }\n\n  // Редактирование профиля\n  patchUserInfo({userName, userDescription}) {\n    return fetch(this.baseUrl + 'users/me', { //`${this.baseUrl}users/me`\n      method: 'PATCH',\n      body: JSON.stringify({\n        name: userName,\n        about: userDescription,\n      }),\n      // headers: this.headers\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n      }\n    })\n    .then(this._getResponse);\n  }\n\n  // Смена аватара\n  patchAvatarUser({ avatarUrl }) {\n    return fetch(this.baseUrl + 'users/me/avatar', { //`${this.baseUrl}users/me/avatar`\n      method: 'PATCH',\n      body: JSON.stringify({\n        avatar: avatarUrl\n      }),\n      // headers: this.headers\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n      }\n    })\n    .then(this._getResponse);\n  }\n\n  // Удаление карточки\n  deleteCard(id) {\n    return fetch(`${this.baseUrl}cards/${id}`, {\n      method: 'DELETE',\n      // headers: this.headers\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n      }\n    })\n    .then(this._getResponse);\n  }\n\n  // Поставить лайк\n  /*putLikeCard(id) {\n    return fetch(`${this.baseUrl}cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this.headers\n    })\n    .then(this._getResponse);\n  }\n\n  // Удалить лайк:\n  //--------- 2 вариант рабочий----------\n  deliteLikeCard(id) {\n    return fetch(`${this.baseUrl}cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this.headers\n    })\n    .then(this._getResponse);\n  }*/\n\n  //-------- 1 вариант рабочий---------\n  changeLikeCardStatus(id, like) {\n    return fetch(`${this.baseUrl}cards/${id}/likes`, {\n      method: like ? 'DELETE' : 'PUT', //если карточка уже лайкнута(черный лайк), то удалить лайк, иначе поставить\n      // headers: this.headers\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n      }\n    })\n    .then(this._getResponse);\n  }\n\n}\n\nconst api = new Api({\n  // baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-26/',\n  baseUrl: 'http://localhost:3005/',\n  headers: {\n    // authorization: 'd11963a5-3631-4d4e-b873-aed64d959e3c',\n    //authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWJkMjZjYmMwMjdiOTZkODNiNGRhYTYiLCJpYXQiOjE2Mzk3ODcwNzIsImV4cCI6MTY0MDM5MTg3Mn0.7OxUJnliCmyvNERrzT6ZUFuKOB-jVOYHXneoBliIUhI`, \n    authorization: null,\n    //'Authorization': `Bearer` + JSON.parse(localStorage.getItem('token')),\n    // 'Authorization': `Bearer ${localStorage.getItem('jwt')}`,\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;\n\n"]},"metadata":{},"sourceType":"module"}