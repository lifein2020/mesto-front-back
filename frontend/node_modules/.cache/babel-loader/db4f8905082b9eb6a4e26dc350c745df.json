{"ast":null,"code":"var _jsxFileName = \"/Users/svetlana/it/react-mesto-api-full/frontend/src/components/Card/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  //Подписываемся на контекст CurrentUserContext\n  const currentUser = React.useContext(CurrentUserContext); //Показать иконку удаления:\n  // Определяем, являемся ли мы владельцем текущей карточки\n  // const isOwn = props.card.owner._id === currentUser._id; // 12спринт\n\n  const isOwn = props.card.owner === currentUser._id; //console.log(props.card);\n  //console.log(props.card.owner);\n  //console.log(currentUser._id);\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n\n  const cardDeleteButtonClassName = `element__trash ${isOwn ? 'element__trash_visible' : 'element__trash'}`; // Определить, поставили ли мы уже «лайк» этой карточке:\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id); //console.log(props.card.likes.[0]);\n\n  console.log(props.card.likes[4]); // Создаём переменную, которую после зададим в `className` для кнопки лайка\n\n  const cardLikeButtonClassName = `element__like ${isLiked ? 'element__like_active' : 'element__like'}`;\n  const likeCounter = props.card.likes.length;\n\n  function handleCardClick() {\n    props.onCardClick(props.card);\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n\n  function handleDeleteClick() {\n    props.onCardDelete(props.card);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"element\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"element__image\",\n      src: props.card.link,\n      alt: props.card.name,\n      onClick: handleCardClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: cardDeleteButtonClassName,\n      type: \"button\",\n      onClick: handleDeleteClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element__text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"element__title\",\n        children: props.card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element__group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: cardLikeButtonClassName,\n          type: \"button\",\n          onClick: handleLikeClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element__count\",\n          children: likeCounter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/svetlana/it/react-mesto-api-full/frontend/src/components/Card/Card.js"],"names":["React","CurrentUserContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","console","log","cardLikeButtonClassName","likeCounter","length","handleCardClick","onCardClick","handleLikeClick","onCardLike","handleDeleteClick","onCardDelete","link","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,mCAAnC;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB;AACA,QAAMC,WAAW,GAAGJ,KAAK,CAACK,UAAN,CAAiBJ,kBAAjB,CAApB,CAFiB,CAIjB;AACA;AACA;;AACA,QAAMK,KAAK,GAAGH,KAAK,CAACI,IAAN,CAAWC,KAAX,KAAqBJ,WAAW,CAACK,GAA/C,CAPiB,CAQjB;AACA;AACA;AAEA;;AACA,QAAMC,yBAAyB,GAC7B,kBAAiBJ,KAAK,GAAG,wBAAH,GAA8B,gBAAiB,EADvE,CAbiB,CAiBjB;AACA;;AACA,QAAMK,OAAO,GAAGR,KAAK,CAACI,IAAN,CAAWK,KAAX,CAAiBC,IAAjB,CAAsBC,CAAC,IAAIA,CAAC,CAACL,GAAF,KAAUL,WAAW,CAACK,GAAjD,CAAhB,CAnBiB,CAoBjB;;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACI,IAAN,CAAWK,KAAX,CAAkB,CAAlB,CAAZ,EArBiB,CAuBjB;;AACA,QAAMK,uBAAuB,GACxB,iBAAgBN,OAAO,GAAG,sBAAH,GAA4B,eAAgB,EADxE;AAIA,QAAMO,WAAW,GAAIf,KAAK,CAACI,IAAN,CAAWK,KAAX,CAAiBO,MAAtC;;AAEA,WAASC,eAAT,GAA2B;AACvBjB,IAAAA,KAAK,CAACkB,WAAN,CAAkBlB,KAAK,CAACI,IAAxB;AACD;;AAEH,WAASe,eAAT,GAA2B;AACvBnB,IAAAA,KAAK,CAACoB,UAAN,CAAiBpB,KAAK,CAACI,IAAvB;AACH;;AAED,WAASiB,iBAAT,GAA6B;AACzBrB,IAAAA,KAAK,CAACsB,YAAN,CAAmBtB,KAAK,CAACI,IAAzB;AACH;;AAED,sBACQ;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,GAAG,EAAEJ,KAAK,CAACI,IAAN,CAAWmB,IAAhD;AAAsD,MAAA,GAAG,EAAEvB,KAAK,CAACI,IAAN,CAAWoB,IAAtE;AAA4E,MAAA,OAAO,EAAEP;AAArF;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,SAAS,EAAEV,yBAAnB;AAA8C,MAAA,IAAI,EAAC,QAAnD;AAA4D,MAAA,OAAO,EAAEc;AAArE;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,kBAAgCrB,KAAK,CAACI,IAAN,CAAWoB;AAA3C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAEV,uBAAnB;AAA4C,UAAA,IAAI,EAAC,QAAjD;AAA0D,UAAA,OAAO,EAAEK;AAAnE;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,oBAAiCJ;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAaH;;GAvDQhB,I;;KAAAA,I;AAyDT,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\n\nfunction Card(props) {\n    //Подписываемся на контекст CurrentUserContext\n    const currentUser = React.useContext(CurrentUserContext);\n\n    //Показать иконку удаления:\n    // Определяем, являемся ли мы владельцем текущей карточки\n    // const isOwn = props.card.owner._id === currentUser._id; // 12спринт\n    const isOwn = props.card.owner === currentUser._id;\n    //console.log(props.card);\n    //console.log(props.card.owner);\n    //console.log(currentUser._id);\n\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\n    const cardDeleteButtonClassName = (\n     `element__trash ${isOwn ? 'element__trash_visible' : 'element__trash'}` \n    ); \n  \n    // Определить, поставили ли мы уже «лайк» этой карточке:\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n    //console.log(props.card.likes.[0]);\n    console.log(props.card.likes.[4]);\n\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\n    const cardLikeButtonClassName = (\n        `element__like ${isLiked ? 'element__like_active' : 'element__like'}`\n    );    \n\n    const likeCounter =  props.card.likes.length;\n\n    function handleCardClick() {\n        props.onCardClick(props.card);\n      } \n\n    function handleLikeClick() {\n        props.onCardLike(props.card);\n    }\n\n    function handleDeleteClick() {\n        props.onCardDelete(props.card);\n    }\n\n    return (\n            <article className=\"element\">\n                <img className=\"element__image\" src={props.card.link} alt={props.card.name} onClick={handleCardClick} />\n                <button className={cardDeleteButtonClassName} type=\"button\" onClick={handleDeleteClick}></button>\n                <div className=\"element__text\">\n                    <h2 className=\"element__title\">{props.card.name}</h2>\n                    <div className=\"element__group\">\n                        <button className={cardLikeButtonClassName} type=\"button\" onClick={handleLikeClick}></button>\n                        <div className=\"element__count\">{likeCounter}</div>\n                    </div>\n                </div>\n            </article>\n    );\n}\n    \nexport default Card;\n\n"]},"metadata":{},"sourceType":"module"}